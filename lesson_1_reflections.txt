How did viewing a diff between two versions of a file help you see the bug that 
was introduced?

 
   It helps me by finding the differences between the two files and
   showing me any lines that changed.


How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?


   I can see any changes that might have caused a different outcome than I
   wanted or go back to a previous, more stable state.


What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

 
   When you manually choose when to commit you have a better control over what
   will be the next version of the project unlike automatic save which may
   fill the history of the file with useless versions.


Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

  
   They do that because when writing code you may have multiple files
   interacting with each other and when making one change it could affect the 
   other files too. In Google Docs each file is usually independent.
   

How can you use the commands git log and git diff to view the history of files?

  
   Using git log I can see all the previous commits, their IDs and the comments
   about them. Using git diff old_commit new_commit I can see the changes that
   happened between those commits.


How might using version control make you more confident to make changes that
could break something?

  
   Even if I do something that completely destroys my project I can always
   revert back to a previous version with git checkout old_commit.


Now that you have your workspace set up, what do you want to try using Git for?

 
   I want to use Git as a powerful tool and assistant in all my projects
   from here on out! :D
